<div style="height: 100vh, width: 100vw"class="grey lighten-5">
    <!-- ================================================================== -->
    <!-- ============================= Header ============================ -->
    <!-- ================================================================== -->
    <div class="navbar-fixed">
        <nav>
            <div class="nav-wrapper blue-grey darken-3">
                <ul class="brand-logo left">
                    <li>UVector</li>
                </ul>
                <div class="brand-logo center input-field" id="searchbar">
                    <a class="dropdown-button" data-activates="dropdown "><i class="material-icons prefix white-text">search</i><input placeholder="Rechercher un noeud, une branche..." id="node-to-search" type="text" class="validate white-text"></a>

                    <ul id="dropdown" class="dropdown-content"></ul>
                </div>

                <ul class="right">
                    <li><a href="#options-modal" class="modal-trigger"><i class="material-icons">settings</i></a></li>
                    <li><a href="#about-modal" class="modal-trigger"><i class="material-icons">help_outline</i></a></li>
                    {{#ifnot logged}}
                        <li><a href="login">Connexion<i class="material-icons right">account_circle</i></a></li>
                    {{else}}
                        <li><a href="logout">Déconnexion ({{login}})<i class="material-icons right">clear</i></a></li>
                    {{/ifnot}}
                </ul>
            </div>
        </nav>
    </div>

    <!-- ================================================================== -->
    <!-- ============================  Graph ============================== -->
    <!-- ================================================================== -->

    <div id="vis-network">
        <canvas></canvas>
    </div>

    <!-- ================================================================== -->
    <!-- ====================  Left and right menus ======================= -->
    <!-- ================================================================== -->


    <div id="menus">

        <!-- ===== Left Menu ===== -->
          <div class="left-menu">
              <div class="card" id="left-menu">
                  <ul class="collapsible" data-collapsible="expandable">
                      <li>
                          <!-- <div class="collapsible-header active" id="menu_visualisation_header"><i class="material-icons">visibility</i><b class="truncate">Visualisation</b></div>
                          <div class="collapsible-body">
                              <p>
                                  <input name="visibility-group" type="radio" id="visibility-all" class="with-gap" checked="checked" />
                                  <label for="visibility-all">Tout</label>
                                  <br />
                                  <input name="visibility-group" type="radio" id="visibility-me" class="with-gap"/>
                                  <label for="visibility-me">Mon parcours
                                      {{#ifnot logged}}(Connectez-vous){{/ifnot}}
                                      {% endif %}
                                  </label>
                                  <br />
                                  <input name="visibility-group" type="radio" id="visibility-same" class="with-gap"/>
                                  <label for="visibility-same">Parcours similaires</label>
                              </p>
                          </div> -->
                      </li>
                      <li>
                          <div class="collapsible-header" id="menu_filtres_header"><i class="material-icons">sort</i><b class="truncate">Filtres</b></div>
                          <div class="collapsible-body" id="menu_filtres_body">



                              <div class="row">
                                  <div class="container section">  <!--class section is for top and bottom padding-->
                                      <label class="truncate"><b>Catégories</b></label>
                                  </div>
                                  <div class="container center-align">
                                      <span><a class="btn-floating center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher/Cacher toutes les catégories" id="node_category_All_hide" ><i class="material-icons center-align">visibility_off</i></a></span>
                                      <span><a class="btn-floating UV_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement les CS" id="node_category_CS" >CS</a></span>
                                      <span><a class="btn-floating UV_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement les TM" id="node_category_TM">TM</a></span>

                                  </div>
                              </div>


                              <div class="row">
                                  <div class="container section">  <!--class section is for top and bottom padding and container is for left end right padding -->
                                      <label class="truncate"><b>Branches</b><br/></label>
                                  </div>
                                  <div class="center-align container">
                                      <span><a class="btn-floating center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher/Cacher toutes les branches" id="node_branch_All_hide"><i class="material-icons center-align">visibility_off</i></a></span>
                                      <span><a class="btn-floating GX_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement le TC" id="node_branch_TC">TC</a></span>
                                      <span><a class="btn-floating GX_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement le GSU" id="node_branch_GU">GU</a></span>
                                      <span><a class="btn-floating GX_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement le GP" id="node_branch_GP">GP</a></span>
                                      <span><a class="btn-floating GX_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement le GB" id="node_branch_GB">GB</a></span>
                                      <span><a class="btn-floating GX_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement le GM" id="node_branch_IM">IM</a></span>
                                      <span><a class="btn-floating GX_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement le GI" id="node_branch_GI">GI</a></span>
                                  </div>

                              </div>

                              <div class="row">
                                  <div class="container section">  <!--class section is for top and bottom padding-->
                                      <label class="truncate"><b> Saison </b></label>
                                  </div>
                                  <div class="container center-align">
                                    <!--<span><a class="btn-floating center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher/Cacher toutes les semestres" id="saison_All_hide"><i class="material-icons center-align">visibility_off</i></a></span>-->

                                      <span><a class="btn-floating Saison_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement les CS" id="saison_A" >A</a></span>
                                      <span><a class="btn-floating Saison_selection center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Afficher uniquement les TM" id="saison_P">P</a></span>

                                  </div>
                              </div>
                              <div class="center-align container">
                                  <span><button class="btn center-align tooltipped" data-position="bottom" data-delay="1300" data-tooltip="Appliquer les changements" id="confirmBtn" onclick="updateGraph()">Confirmer</button></span>
                              </div>
                          </div>
                      </li>
                      <!--<li>
                          <div class="collapsible-header" id="menu_parcours_header"><i class="material-icons">timeline</i><b class="truncate">Mes parcours</b></div>
                          <div class="collapsible-body">
                              <ul class="collection">
                                  <li class="collection-item truncate"><div>Parcours 1<a href="#!" class="secondary-content"><i class="material-icons">delete</i></a></div></li>
                                  <li class="collection-item active truncate"><div>Parcours 2<a href="#!" class="secondary-content"><i class="material-icons">delete</i></a></div></li>
                                  <li class="collection-item"><div class="truncate">Ajouter un nouveau parcours<a href="#!" class="secondary-content"><i class="material-icons">playlist_add</i></a></div></li>
                              </ul>
                          </div>
                      </li>-->
                  </ul>
              </div>
          </div>


          <!-- ===== Right Menu ===== -->
          <div class="right-menu">
              <div class="card" id="right-menu-uv">
                <div class="card">
                  <div class="card-content ">
                    <span class="card-title" id="uvCard-title">MT90</span>
                  </div>
                  <div class="card-tabs">
                    <ul class="tabs tabs-fixed-width">
                      <li class="tab"><a class="active" href="#uvCard-info">Info</a></li>
                      <li class="tab"><a href="#uvCard-stats">Stats</a></li>
                    </ul>
                  </div>
                  <div class="card-content">
                    <div id="uvCard-info">
                      <p id="uvCard-description"> Premier volet du module initial de mathématiques de Tronc Commun. Il permet d'acquérir les bases indispensables à l'étude des fonctions d'une variable.</p>
                      <p> Nombre de crédits : <span id="uvCard-credits">6</span> </p>
                      <p> Type : <span id="uvCard-type">CS</span> </p>
                      <p> Branche : <span id="uvCard-branche">GX</span> </p>
                    </div>
                    <div id="uvCard-stats">
                      <canvas id="attendanceChart" width="100" height="100"></canvas>
                    </div>
                  </div>
                  <!--<div class="card-action">
                    <a href="#">This is a link</a>
                  </div>-->
                </div>
              </div>
              <div class="card" id="right-menu-gx">
                <div class="card">
                  <div class="card-content ">
                    <span class="card-title">
                      <span id="gxCard-title">GI01</span>
                      <!-- Dropdown Structure
                      <i class='dropdown-trigger material-icons right' href='#' data-target='dropdown1'>more_vert</a>


                      <ul id='dropdown1' class='dropdown-content'>
                        <li><a href="#!">one</a></li>
                        <li><a href="#!">two</a></li>
                      </ul>-->
                    </span>

                  </div>
                  <div class="card-tabs">
                    <ul class="tabs tabs-fixed-width">
                      <li class="tab"><a class="active" href="#gxCard-cs">CS</a></li>
                      <li class="tab"><a href="#gxCard-tm">TM</a></li>
                    </ul>
                  </div>
                  <div class="card-content">
                    <div id="gxCard-cs">
                      <canvas id="attendanceChart" width="100" height="100"></canvas>
                    </div>
                    <div id="gxCard-tm">
                      <canvas id="attendanceChart" width="100" height="100"></canvas>
                    </div>
                  </div>
                  <!--<div class="card-action">
                    <a href="#">This is a link</a>
                  </div>-->
                </div>
              </div>
          </div>
        </div>









    <!-- ================================================================== -->
    <!-- ====================  Loader for the graph ======================= -->
    <!-- ================================================================== -->
    <!-- Loader that appears while the graph is being processed -->

    <div class="center" id="graph-preloader">
      <div class="preloader-wrapper active">
        <div class="spinner-layer spinner-red-only">
          <div class="circle-clipper left">
            <div class="circle"></div>
          </div><div class="gap-patch">
            <div class="circle"></div>
          </div><div class="circle-clipper right">
            <div class="circle"></div>
          </div>
        </div>
      </div>
    </div>


    <div class="fixed-action-btn" id="#action-button">
        <a class="btn-floating btn-large blue-grey darken-1">
            <i class="large material-icons">aspect_ratio</i>
        </a>
        <ul>
            <li><a class="btn-floating blue-grey lighten-2 tooltipped" data-position="left" data-delay="500" data-tooltip="Dézoomer" onclick="zoomOut(activeGraph)"><i class="material-icons">remove</i></a></li>
            <li><a class="btn-floating blue-grey lighten-2 tooltipped" data-position="left" data-delay="500" data-tooltip="Zoomer" onclick="zoomIn(activeGraph)"><i class="material-icons">add</i></a></li>
            <li><a class="btn-floating blue-grey lighten-2 tooltipped" data-position="left" data-delay="500" data-tooltip="Ajuster" onclick="fitSize(activeGraph)"><i class="material-icons">fullscreen</i></a></li>
        </ul>
    </div>









    <!-- ================================================================== -->
    <!-- ======================  Modals Elements ========================== -->
    <!-- ================================================================== -->

    <!-- Modal for "a propos" -->
    <div id="about-modal" class="modal modal-fixed-footer">
        <div class="modal-content">
            <h5 style="color: #218c74">Qu'est-ce que UVector ?</h5> <br>
            <p>
                UVector est une web application vous permettant de visualiser les différentes UV de l'UTC
                sous forme d'un graphe. Les UV sont liées au semestres auxquels les étudiants s'y sont inscrits.

            </p>
            <p>
                Les noeuds représentent les différentes UV et leur couleur leur branche principale (ils seront en gris s'ils n'en possèdent pas).
            </p>
            <p>
                Les étiquettes représentent quant à elles les divers semestres réalisés pas les étudiants classés dans l'ordre chronologique.
            </p>
            <br>
            <h5 style="color: #218c74">Comment l'utiliser ?</h5> <br>

            <div class="row">
              <div class="col s1"><i class="material-icons">touch_app</i></div>
              <div class="col s11">Vous pouvez tirer sur les différents noeuds afin de mettre en évidence les liens qui les concernent.</div>
            </div>

            <div class="row">
              <div class="col s1"><i class="material-icons">trending_up</i></div>
              <div class="col s11">Vous pouvez cliquer sur une UV ou un semestre pour avoir de plus amples informations le/la concernant.</div>
            </div>

            <div class="row">
              <div class="col s1"><i class="material-icons">filter_none</i></div>
              <div class="col s11">Vous pouvez appliquer des filtres grâce au menu déroulant situé à gauche, comme la branche, le type d'UV ou encore la saison voulue.</div>
            </div>

            <div class="row">
              <div class="col s1"><i class="material-icons">search</i></div>
              <div class="col s11">Enfin, vous pouvez rechercher de manière spécifique une UV grâce à la barre de recherche située en haut de la page.</div>
            </div>
            <br>

            <h5 style="color: #218c74">Notre technologie</h5><br>

            <p>Pour la réalisation cette web application, nous avons opté pour l'utilisation de Node.js. En effet, c'est une plateforme logicielle libre, largement utilisée et moderne qui nous permet de gérer le côté serveur de l'application.</p>

            <p><b>La base de données : </b>Afin d'insérer, stocker et récupérer nos données, nous avons utilisé la base de données non-relationelle orientée graphe Neo4J. Elle est donc optimisée pour ce type de données et nous donne un aperçu de l'ensemble avant même l'implémentation de l'application.</p>

            <p><b>La librairie de visualisation : </b>Afin de représenter ces données sous forme de graphe au sein de l'application et en gérer les paramètres, nous avons utilisé la librairie Vis.js. Elle nous permet entre autres de régler la longueur ou l'épaisseur des liens, la taille des noeuds, leur couleur, leur label, le type de modélisation du graphe (nous avons ici opté pour du ForceAtlas2) et bien d'autres choses.</p>

            <p><b>Le conteneur logiciel : </b>Afin d'optimiser le développement et la distribution du logiciel, nous avons choisi d'utiliser Docker. C'est un conteneur logiciel qui nous permet de rendre l'application fonctionelle et l'expérience utilisateur identique quelque soit la machine utilisée.</p>

            <p><b>Les autres librairies : </b>Parmi les autres librairies utilisées pour ce projet, on pourra citer MaterializeCss et JQuery qui nous permettent de faire la mise en forme et l'interaction entre les divers éléments de l'application.</p>
            <br>

            <h5 style="color: #218c74">Le futur d'UVector</h5><br>

            <p>A l'avenir, on pourra penser à changer de librairie de visualisation (D3.js serait un choix intéressant) et fournir à la base de données de plus amples informations afin d'étendre les possibilitées de l'application.</p>

            <p>Par exemple, on pourra implémenter les résultats des élèves pour mettre en évidence certains patterns (facteurs de réussite à certaines UVs). On pourra aussi fournir les descriptions des UVs, leur taux de réussite et d'attribution afin de pouvoir les rendre disponibles à l'utilisateur (la fonction est actuellement disponible, mais les données manquent).
            <br>Parmi les fonctions qui nous tenaient à coeur et qui représenteraient un outil de valeur pour les étudiants, on pourra citer la représentation des divers parcours en mettant en valeur les modèles courants ou les plus atypiques. On pourra également citer la fonction de planification de parcours (en incluant éventuellement les débouchés possibles).</p>

            <p>Un lien avec les services de l'UTC seraient un vrai plus afin de pouvoir récupérer de plus amples données et s'assurer d'un contenu constament à jour.</p>

            <h5 style="color: #218c74">Bonne utilisation !</h5><br>

        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-action modal-close waves-effect btn-flat">Fermer</a>
        </div>
    </div>

    <!-- Modal for "options" -->
    <!-- <div id="options-modal" class="modal modal-fixed-footer">
        <div class="modal-content">
            <h4>Options</h4>
            <div class="col s12">
                <h5>Commandes</h5>

                <div>
                    <p><kbd>↑</kbd> <kbd>↓</kbd> <kbd>←</kbd> <kbd>→</kbd> : Se déplacer dans le graphe</p><br />
                    <p><kbd>CTRL</kbd> + <kbd>Clic gauche</kbd> : Sélectionner plusieurs noeuds</p><br />
                    <p><kbd>CTRL</kbd> + <kbd>+</kbd> : Zoomer</p><br />
                    <p><kbd>CTRL</kbd> + <kbd>-</kbd> : Dézoomer</p><br />
                    <p><kbd>CTRL</kbd> + <kbd>0</kbd> : Réinitialiser la vue</p><br />
                    <p><kbd>CTRL</kbd> + <kbd>F</kbd> : Rechercher un noeud, une branche...</p><br />
                </div>

                <div class="divider"></div>

            </div>
        </div> -->

        <!-- Modal for footer-->
        <!-- <div class="modal-footer">
            <a href="#!" class="modal-action modal-close waves-effect btn-flat">Fermer</a>
        </div>
    </div> -->

    <!-- ================================================================== -->
    <!-- =========================   JS values   ========================== -->
    <!-- ================================================================== -->


    <!-- <script type="text/javascript">
    var user = {% if logged %}true{% else %}false{% endif %};
    </script> -->


    <!-- ================================================================== -->
    <!-- ====================  JavaScript inline ========================== -->
    <!-- ================================================================== -->

    <script type="text/javascript">
    function showUvCard(uv){
      $('#right-menu-gx').hide();
      $('#right-menu-uv').show();
      $.getJSON( "/api/v1/uvs/" + uv, data => {
        $("#uvCard-title").text(data.code)
        $("#uvCard-description").text(data.description)
        $("#uvCard-branche").text(data.branche)

      });
      updateGraphAttendance(uv);
    }
    function showGxCard(gx){
      $('#right-menu-gx').show();
      $('#right-menu-uv').hide();
      $("#gxCard-title").text(gx)
      updateGxGraphAttendance(gx);
    }
    var attendanceChart;
    var csAttendanceChart;
    var tmAttendanceChart;

    function updateGxGraphAttendance(gx){
      options = {
        legend: {
          display: false
        },
        scales: {
          xAxes: [{
            gridLines: {
              display: false,
            },
          }],
          yAxes: [{
            ticks: {
                beginAtZero: true
            },
            display: false
          }],
        },
      }
      $.getJSON( "/api/v1/semestres/" + gx + "/attendance/CS?saison=" + saison, data => {
        attendance = data;
        data = {
            datasets: [{
                data: Object.values(attendance),
                backgroundColor: "#1abc9c"
            }],

            // These labels appear in the legend and in the tooltips when hovering different arcs
            labels: Object.keys(attendance)
        };
        var ctx = $("#gxCard-cs>#attendanceChart");
        if ( csAttendanceChart ){
          csAttendanceChart.destroy()
        }
        csAttendanceChart = new Chart(ctx, {
            type: 'bar',
            data: data,
            options: options
        });
      });
      $.getJSON( "/api/v1/semestres/" + gx + "/attendance/TM?saison=" + saison, data => {
        attendance = data;
        data = {
            datasets: [{
                data: Object.values(attendance),
                backgroundColor: "#1abc9c"
            }],

            // These labels appear in the legend and in the tooltips when hovering different arcs
            labels: Object.keys(attendance)
        };
        var ctx = $("#gxCard-tm>#attendanceChart");
        if ( tmAttendanceChart ){
          tmAttendanceChart.destroy()
        }
        tmAttendanceChart = new Chart(ctx, {
            type: 'bar',
            data: data,
            options: options
        });
      });
    }

    function updateGraphAttendance(uv){
      $.getJSON( "/api/v1/uvs/" + uv + "/attendance", data => {
        attendance = data;
        colors_GX = {
          TC: "#3498db",
          GU: "#e67e22",
          GI: "#1abc9c",
          IM: "#f1c40f",
          GB: "#9b59b6",
          GP: "#e74c3c",
          GX: "#888888"
        }
        color = Object.keys(attendance).map( GX => {
          return colors_GX[GX]
        })
        data = {
            datasets: [{
                data: Object.values(attendance),
                backgroundColor: color
            }],

            // These labels appear in the legend and in the tooltips when hovering different arcs
            labels: Object.keys(attendance)
        };
        var ctx = $("#uvCard-stats>#attendanceChart");
        if ( attendanceChart ){
          attendanceChart.destroy()
        }
        attendanceChart = new Chart(ctx, {
            type: 'doughnut',
            data: data,
            options: {}
        });
      });
      //attendance = {"GU":0.02857142857142857,"GI":0.39365079365079364,"TC":0.0746031746031746,"GB":0.03968253968253968,"GP":0.08888888888888889,"IM":0.3746031746031746}

    }
    // Init the select in cards
    $(document).ready(function(){

      $('#right-menu-gx').hide();
      $('#right-menu-uv').hide();
      // Chart


        $(".UV_selection, .GX_selection, .Saison_selection").click( (element)=>{
          $(element.currentTarget).toggleClass("btn-flat")
          if ( $(element.currentTarget).hasClass("GX_selection") ){
            if($(".GX_selection").hasClass("btn-flat")){
              $("#node_branch_All_hide i").html("visibility")
            } else {
              $("#node_branch_All_hide i").html("visibility_off")
            }
          }
          if ( $(element.currentTarget).hasClass("UV_selection") ){
            if($(".UV_selection").hasClass("btn-flat")){
              $("#node_category_All_hide i").html("visibility")
            } else {
              $("#node_category_All_hide i").html("visibility_off")
            }
          }
        })

        $("#saison_All_hide").click( (element) =>{
          if(!$(".Saison_selection").hasClass("btn-flat")){
            $(".Saison_selection").addClass("btn-flat")
            $("#saison_All_hide i").html("visibility")

          } else {
            $(".Saison_selection").removeClass("btn-flat")
            $("#saison_All_hide i").html("visibility_off")
          }
        })

        $("#node_branch_All_hide").click( (element) =>{
          if(!$(".GX_selection").hasClass("btn-flat")){
            $(".GX_selection").addClass("btn-flat")
            $("#node_branch_All_hide i").html("visibility")

          } else {
            $(".GX_selection").removeClass("btn-flat")
            $("#node_branch_All_hide i").html("visibility_off")
          }
        })
        $("#node_category_All_hide").click( (element) =>{
          if(!$(".UV_selection").hasClass("btn-flat")){
            $(".UV_selection").addClass("btn-flat")
            $("#node_category_All_hide i").html("visibility")
          } else {
            $(".UV_selection").removeClass("btn-flat")
            $("#node_category_All_hide i").html("visibility_off")
          }
        })

        // Hidding right panel



        $('select').material_select();
        updateGraph();

        /*$('.modal-trigger').leanModal({
            dismissible: true, // Modal can be dismissed by clicking outside of the modal
            opacity: .5, // Opacity of modal background
            in_duration: 20, // Transition in duration
            out_duration: 20
        });*/
        $('.modal').modal();

        $('.collapsible').collapsible({
            // A setting that changes the collapsible behavior to expandable instead of the default accordion style
            accordion : $(window).width() <= 992 || $(window).height() <= 768
        });

        $('.tooltipped').tooltip({
            delay: 50
        });
        $('.dropdown-button').dropdown({
            inDuration: 300,
            outDuration: 225,
            constrain_width: true, // Does not change width of dropdown to that of the activator
            hover: false, // Activate on hover
            gutter: 0, // Spacing from edge
            belowOrigin: true, // Displays dropdown below the button
            alignment: 'left' // Displays dropdown with edge aligned to the left of button
        });


        // To execute function on enter key press
        /*(function($){
            $.fn.onEnter = function(func){
                this.bind('keypress', function(e){
                    if (e.keyCode == 13)
                    func.apply(this, [e]);
                });
                return this;
            };
        })(jQuery);*/



        // Search
        $('#node-to-search').onEnter(function(){
            searchNode(activeGraph, $(this).val().toUpperCase());
        });

        // Autocomplete
        $('#node-to-search').on('input', function(){
            var search = $(this).val().toUpperCase(),
            // Targeting matching and displayed nodes
            matchNodes = graphBipartite.tagsForSearchBar.filter(function(n){
                var hidden = false,
                node = activeGraph.sigmaInstance.graph.nodes(n);

                if(node)
                hidden = node.hidden;

                return n.match(RegExp('^' + search, 'i')) && !hidden;
            });

            $('#dropdown').empty();

            if(search){
                var maxLength = Math.min(matchNodes.length, 5);

                for(var i = 0; i < maxLength; i++){
                    var node = activeGraph.sigmaInstance.graph.nodes(matchNodes[i]),
                    name = '';

                    if(node)
                    name = (node.attributes.nomUV) ? '<span style="color: #9E9E9C;" class="truncate">' + node.attributes.nomUV + '</span>' : '';

                    $('#dropdown').append('<li><a href="#"><span class="node">' + matchNodes[i] + '</span>' + name + '</a></li>');
                }
            }
        });

        // On autocomplete element click
        $('#dropdown').on('click', 'li', function(e){
            searchNode(activeGraph, $(this).find('a span.node').text().toUpperCase());
        });

        // Hide autocomplete on click elsewhere
        $(document).mouseup(function(e){
            var searchbar = $('#node-to-search'),
            dropdown = $('#dropdown');

            // if the target of the click isn't the searchbar nor a descendant of the searchbar or the autocomplete dropdown
            if(!searchbar.is(e.target) && searchbar.has(e.target).length === 0 && !dropdown.is(e.target) && dropdown.has(e.target).length === 0){
                dropdown.empty();
                searchbar.val(''); // Emptying searchbar
            }
        });




        // // Some new shortcuts
        // window.addEventListener("keydown",function(e){
        //     // CTRL + F
        //     if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)){
        //         e.preventDefault();
        //         $('#node-to-search').focus();
        //     }
        //
        //     // CTRL + 0
        //     if(e.ctrlKey && e.keyCode === 96){
        //         e.preventDefault();
        //         fitSize(activeGraph);
        //     }
        //
        //     // CTRL + +
        //     if(e.ctrlKey && e.keyCode === 107){
        //         e.preventDefault();
        //         zoomIn(activeGraph);
        //     }
        //
        //     // CTRL + -
        //     if(e.ctrlKey && e.keyCode === 109){
        //         e.preventDefault();
        //         zoomOut(activeGraph);
        //     }
        //
        //     // Escape
        //     if(e.keyCode === 27)
        //     unselectAll(activeGraph);
        //
        //     // CTRL + A
        //     if(e.ctrlKey && e.keyCode == 65)
        //     e.preventDefault();
        // });
    });
    </script>

</div>
